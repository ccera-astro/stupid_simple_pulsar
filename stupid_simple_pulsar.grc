<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.13'?>
<flow_graph>
  <timestamp>Sun Sep 20 20:51:49 2020</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value>2000,1500</value>
    </param>
    <param>
      <key>category</key>
      <value>[GRC Hier Blocks]</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 8)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>no_gui</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>stupid_simple_pulsar</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>run</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>sizing_mode</key>
      <value>fixed</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
    <param>
      <key>placement</key>
      <value>(0,0)</value>
    </param>
  </block>
  <block>
    <key>variable_function_probe</key>
    <param>
      <key>block_id</key>
      <value>agc_probe</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>function_args</key>
      <value></value>
    </param>
    <param>
      <key>function_name</key>
      <value>level</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1160, 232)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>agc_poller</value>
    </param>
    <param>
      <key>value</key>
      <value>[1.0]*fbsize</value>
    </param>
    <param>
      <key>poll_rate</key>
      <value>1.0/8.0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>***************************
AGGREGATE RFI MASK
COMMAND-LINE
DYNAMIC
PASSBAND SMOOTHING
***************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1592, 972)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>bank_mask</value>
    </param>
    <param>
      <key>value</key>
      <value>st_psr_helper.frqlst_to_mask(fmask,skyf,samp_rate,fbsize,rfi_poller,mjd,prefix,pname,rfi_eval_rate)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1776, 548)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>coarse_ppms</value>
    </param>
    <param>
      <key>value</key>
      <value>[-50,-20,-10,0,10,20,50]</value>
    </param>
  </block>
  <block>
    <key>variable_function_probe</key>
    <param>
      <key>block_id</key>
      <value>Stupid_folder</value>
    </param>
    <param>
      <key>comment</key>
      <value>*************************
Accessible via XMLRPC
For the 'profile_display'
application.
*************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>function_args</key>
      <value></value>
    </param>
    <param>
      <key>function_name</key>
      <value>get_profile</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1776, 616)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>current_profile</value>
    </param>
    <param>
      <key>value</key>
      <value>[0.0]*tbins</value>
    </param>
    <param>
      <key>poll_rate</key>
      <value>5</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>********************
THIS VARIABLE IS
'ON' AFTER THE
.FIL HEADER HAS
BEEN WRITTEN
********************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1856, 1196)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>enable_writes</value>
    </param>
    <param>
      <key>value</key>
      <value>st_psr_helper.get_wrenabled(first_poller)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1832, 236)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fbmap</value>
    </param>
    <param>
      <key>value</key>
      <value>{8 : 10, 16: 20, 32: 40, 64: 80, 128: 125, 256: 250, 512: 500, 1024: 1000, 2048: 2000}</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>*********************
FILTERBANK SIZE
NON 2**N POSSIBLE!!
*********************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1176, 28)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fbsize</value>
    </param>
    <param>
      <key>value</key>
      <value>int(ideal_fb_bins) if (is6250 &gt; 0  and is7500 &gt; 0) else mapped_fbsize</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1776, 484)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fine_ppms</value>
    </param>
    <param>
      <key>value</key>
      <value>[-1.0,-0.5,-0.25,0,0.25,0.5,1.0]</value>
    </param>
  </block>
  <block>
    <key>variable_function_probe</key>
    <param>
      <key>block_id</key>
      <value>Stupid_folder</value>
    </param>
    <param>
      <key>comment</key>
      <value>**********************
A FUNCTION-PROBE
POLLER TO CAPTURE A
SEMI-ACCURATE MJD
AT FIRST SAMPLE
ARRIVAL IN THE EPOCH
FOLDER
***********************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>function_args</key>
      <value></value>
    </param>
    <param>
      <key>function_name</key>
      <value>first_sample_time</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1408, 1064)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>first_poller</value>
    </param>
    <param>
      <key>value</key>
      <value>None</value>
    </param>
    <param>
      <key>poll_rate</key>
      <value>50.0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1600, 20)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>flower</value>
    </param>
    <param>
      <key>value</key>
      <value>(skyf-(samp_rate/2.0))/1.0e6</value>
    </param>
  </block>
  <block>
    <key>variable_function_probe</key>
    <param>
      <key>block_id</key>
      <value>Stupid_folder</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>function_args</key>
      <value>skyf,samp_rate,longitude,subint,jsfilename,int(logtime*real_fbrate)</value>
    </param>
    <param>
      <key>function_name</key>
      <value>flush_logfile</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1216, 1064)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>flush_poller</value>
    </param>
    <param>
      <key>value</key>
      <value>1.0</value>
    </param>
    <param>
      <key>poll_rate</key>
      <value>1.0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1704, 20)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fupper</value>
    </param>
    <param>
      <key>value</key>
      <value>(skyf+(samp_rate/2.0))/1.0e6</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>**************************************
CALLS THE HEADER WRITER
USING THE SAME POLLER
THAT CAPTURES THE FIRST
SAMPLE TIME
WRITES .FIL HEADER EXACTLY ONCE,
THEN SETS THE "OK TO WRITE SAMPLES'
FLAG
***************************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1600, 1148)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>hdr_sts</value>
    </param>
    <param>
      <key>value</key>
      <value>st_psr_helper.build_header_info(hfilename,pname,ra,dec,skyf,samp_rate,real_fbrate,fbsize,flout,first_poller)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>Filename construction for
filterbank output file</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1816, 988)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>hfilename</value>
    </param>
    <param>
      <key>value</key>
      <value>prefix+"/psr-%s-%-.1f-%-.1f-%-9.3f-%d-%d.fil" % (pname, skyf/1.0e6, samp_rate/1.0e6, mjd, fbsize,real_fbrate/4.0)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1592, 84)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>ideal_fb_bins</value>
    </param>
    <param>
      <key>value</key>
      <value>int(max([math.pow(2.0,round(math.log(smear/(width/8.0))/math.log(2.0))), 8]))</value>
    </param>
  </block>
  <block>
    <key>variable_function_probe</key>
    <param>
      <key>block_id</key>
      <value>agc_probe</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>function_args</key>
      <value></value>
    </param>
    <param>
      <key>function_name</key>
      <value>level</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1288, 968)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>impulse_poller</value>
    </param>
    <param>
      <key>value</key>
      <value>[1.0e7]*fbsize</value>
    </param>
    <param>
      <key>poll_rate</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1824, 108)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>is6250</value>
    </param>
    <param>
      <key>value</key>
      <value>int(srate) % int(6250000)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1912, 108)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>is7500</value>
    </param>
    <param>
      <key>value</key>
      <value>int(srate) % int(7500000)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1816, 1124)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>jsfilename</value>
    </param>
    <param>
      <key>value</key>
      <value>hfilename.replace(".fil",".json")</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1832, 172)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>mapped_fbsize</value>
    </param>
    <param>
      <key>value</key>
      <value>fbmap[ideal_fb_bins]</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>********************************
Current MJD at graph start
Used only for file-naming right now
********************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1080, 1180)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>mjd</value>
    </param>
    <param>
      <key>value</key>
      <value>(time.time() / 86400.0)+40587.0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value>**************************
* Command-line drate/fbrate
* is a TARGET rate
* Actual rate MAY be different
* due to integer decimation
* effects
* also this is multiplied X median_len
* to accomodate the 
* median filtering in the folder
***************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1320, 20)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>real_fbrate</value>
    </param>
    <param>
      <key>value</key>
      <value>st_psr_helper.find_rate(samp_rate,fbsize,drate)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1688, 1148)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>rfi_eval_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>2.0</value>
    </param>
  </block>
  <block>
    <key>variable_function_probe</key>
    <param>
      <key>block_id</key>
      <value>rfi_probe</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>function_args</key>
      <value></value>
    </param>
    <param>
      <key>function_name</key>
      <value>level</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1432, 968)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>rfi_poller</value>
    </param>
    <param>
      <key>value</key>
      <value>[0.0001]*fbsize</value>
    </param>
    <param>
      <key>poll_rate</key>
      <value>rfi_eval_rate</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(24, 316)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>int(srate)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1712, 148)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>skyf</value>
    </param>
    <param>
      <key>value</key>
      <value>freq if sky &lt;= 0.0 else sky</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1696, 84)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>smear</value>
    </param>
    <param>
      <key>value</key>
      <value>dm/2.41e-4 * (1.0/(flower*flower)-1.0/(fupper*fupper))</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1512, 20)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>tbins</value>
    </param>
    <param>
      <key>value</key>
      <value>int(period/width)*res</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('Stupid Pulsar Folder', 'blk', [('fbsize', '16'), ('smear', '0.0085'), ('period', '0.71452'), ('fbrate', '2500.0'), ('tbins', '250'), ('tppms', "'0.0'"), ('thresh', '1000000.0')], [('0', 'float', 1)], [], 'A pulsar folder/de-dispersion block', ['thresh'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>"""
Embedded Python Blocks:

Each time this file is saved, GRC will instantiate the first class it finds
to get ports and parameters of your block. The arguments to __init__  will
be the parameters. All of them are required to have default values!
"""

import numpy as np
from gnuradio import gr
import time
import json
import atexit
import ephem
import math
import random

#
# Many of my RA programs haul this little function around...
# Should be converted to astropy at some point...
#
def cur_sidereal(longitude):
    longstr = "%02d" % int(longitude)
    longstr = longstr + ":"
    longitude = abs(longitude)
    frac = longitude - int(longitude)
    frac *= 60
    mins = int(frac)
    longstr += "%02d" % mins
    longstr += ":00"
    x = ephem.Observer()
    x.date = ephem.now()
    x.long = longstr
    jdate = ephem.julian_date(x)
    tokens=str(x.sidereal_time()).split(":")
    hours=int(tokens[0])
    minutes=int(tokens[1])
    seconds=int(float(tokens[2]))

    sidt = "%02d,%02d,%02d" % (hours, minutes, seconds)
    return (sidt)

class blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block
    """A pulsar folder/de-dispersion block"""

    def __init__(self, fbsize=16,smear=0.0085,period=0.714520,fbrate=2500.0,tbins=250,
        tppms="0.0", thresh=1.0e6):  # only default arguments here
        """arguments to this function show up as parameters in GRC"""
        gr.sync_block.__init__(
            self,
            name='Stupid Pulsar Folder',   # will show up in GRC
            in_sig=[np.float32],
            out_sig=None
        )


        #
        # Make sure we get data in appropriately-sized chunks
        #
        self.set_output_multiple(fbsize)

        #
        # Compute delays for de-dispersion
        #
        self.ddelay = smear * float(fbrate)
        self.delayincr = self.ddelay/float(fbsize-1.0)
        self.delayincr += self.ddelay/float(fbsize)
        self.delayincr /= 2.0
        self.maxdelay = int(round(self.delayincr*(fbsize-1)))
        self.delayincr = int(self.delayincr)
        
        
        #
        # Create a set of ringbuffers to implement delay logic
        #
        # We make them just a bit bigger than the maximum delay
        #
        self.delayrings = np.zeros((fbsize, self.maxdelay+5))
        self.delaylen = len(self.delayrings[0])
        self.delayptr = 0

        
        #
        # This will *slightly* improve index-calculation performance in the
        #  work function.
        #
        self.delaymap = [[0 for i in range(self.delaylen)] for j in range(self.delaylen)]
        for x in range(self.delaylen):
            for y in range(self.delaylen):
                dndx = x - y
                if (dndx &lt; 0):
                    dndx = self.delaylen + dndx
                self.delaymap[x][y] = int(dndx)

        #
        # Needed in a few places
        #
        self.flen = fbsize

        #
        # The pulsar period
        #
        self.p0 = period

        #
        # The derived single-period pulse profile with various shifts
        #
        # We take it as a string, because that's easiest for command-line origin
        #
        if (isinstance(tppms,str)):
            trials = tppms.split(",")
            self.shifts = []
            for p in trials:
                self.shifts.append(float(p)*1.0e-6)
        elif (isinstance(tppms,list)):
            self.shifts = []
            for p in tppms:
                self.shifts.append(float(p)*1.0e-6)
        elif (isinstance(tppms,float) or isinstance(tppms,int)):
            self.shifts = [float(tppms)*1.0e-6]
        #
        # Create numpy 2D arrays for profile accumulator and counter
        #
        self.profiles = np.zeros((len(self.shifts),tbins))
        self.pcounts = np.zeros((len(self.shifts),tbins))
        self.nprofiles = len(self.profiles)

        #
        # The profile length as phase bins
        #
        self.plen = int(tbins)

        #
        #
        # The profile should be "exactly" as long as a single
        #   pulse period
        # We have compute the period offsets and perturb the
        #  period appropriately, producing an array of
        #  periods.
        #
        # Typically, the offsets are at most a few PPM
        #
        self.periods = []
        for shift in self.shifts:
            self.periods.append((self.p0*(1.0+shift)))

        #
        # Slightly accelerate math in the folding loop
        #
        self.pax = []
        for per in self.periods:
            self.pax.append(float(self.plen)/per)
        #
        # Input sample period (UNRELATED TO PULSAR PERIOD)
        #
        self.sper = 1.0/float(fbrate)

        #
        # Mission Elapsed Time
        #
        # Folding relies on this (INTEGER!) counter being incremented every time
        #  a new sample arrives from the filterbank.  Where "sample" is the aggregate
        #  of all the filterbank outputs summed.
        #
        # It is kept as an integer to reduce numerical error accumulation
        #
        self.MET = 0

        #
        # Housekeeping variable are initialized elsewhere in the
        #  flush_logfile() method
        #2
        self.housekeeping = False

        #
        # To record time-of-day of first sample
        # The work() function will initialize this on first sample
        #
        self.first_sample = None

        #
        # Housekeeping counters for both "outer" (top half) and
        #   "inner" (bottom half) of epoch folder.
        #
        self.outer_cnt = 0
        self.inner_cnt = 0

        #
        # Strong impulse removal threshold/2.5
        #
        self.thresh = thresh

        #
        # We don't do the threshold comparison until
        #  we've run for a while--to allow the averaging
        #  in the flow-graph to settle.
        #
        self.thrcount = int(fbrate*4*5)

    #
    # Get the current zero-PPM profile
    #
    # Supports the profile_display program, which gets
    #  at this via XMLRPC
    #
    def get_profile(self):
        mid = int(self.nprofiles/2)
        if (0 in self.pcounts[mid]):
            return [0.0]*self.plen
        l = []
        for v in np.divide(self.profiles[mid],self.pcounts[mid]):
            l.append(float(v))
        return l

    #
    # On slower disks, as the jsonlets array gets bigger, the work function
    #  can stall long enough to cause over-runs.  Soooooo
    #  we move the actual file-writing out of the work function and into
    #  this function that is polled.
    #
    # There's a simple semaphore than indicates that the jsonlets array is
    #  ready to be dumped.
    #
    def flush_logfile(self,skyf,samp_rate,longitude,subint,jsfilename,interval):
        
        self.freq = skyf
        self.bw = samp_rate
        self.longitude = longitude
        
        if (self.housekeeping == False):
            self.INTERVAL = interval
            self.logcount = self.INTERVAL
            self.subint = subint
            self.subtimer = subint
            self.subseq = 0
            self.housekeeping = True
            self.logready = False
            self.sequence = 0
            self.jsonlets = []
            
        if (self.logready == True):
            #
            # Dump the accumulating JSON array
            #  (well, actually, an array of dictionaries that
            #   will get JSON encoded.)
            #
            chunk = int(500e6)
            fp = open(jsfilename, "w")
            jstr = json.dumps(self.jsonlets, indent=4)
            
            #
            # If it's "svelt", dump the whole thing immediately
            #
            if (len(jstr) &lt; chunk):
                fp.write(jstr)
                
            #
            # Dribble it out with a bit of a pause--on some systems,
            #   our JSON writing interferes with our main .FIL writing
            #   resulting in over-runs, even at modest sample rates. :(
            #
            else:
                chunks = int(len(jstr)/chunk)
                remainder = len(jstr) % chunk
                base = 0
                for k in range(chunks):
                    fp.write(jstr[base:base+chunk])
                    base += chunk
                    time.sleep(0.250)
                fp.write(jstr[base:])
                
            
            fp.close()
            self.logready = False
        return True

    #
    # So the header-writer can get the first-sample time.
    #
    def first_sample_time(self):
        return self.first_sample

    #
    # Logging into our friend the ever-growing JSON buffer
    #
    def do_logging(self):
        
        if self.housekeeping == False:
            return

        #
        # To make sure the file-dumper doesn't activate in the middle
        #
        self.logready = False
        
        #
        # First, produce a list of averaged profiles
        #  remember we keep both an accumulator and
        #  a counter, so that we can produce an average
        #  at log time.
        #
        outputs = []
        for x in range(self.nprofiles):
            outputs.append(np.divide(self.profiles[x],self.pcounts[x]))

        #
        # Create a housekeeping dictionary
        #
        d = {}
        t = time.gmtime()
        d["sampletime"] = self.sper
        d["samplerate"] = 1.0/self.sper
        d["freq"] = self.freq
        d["bw"] = self.bw
        d["time"] = "%04d%02d%02d-%02d:%02d:%02d" % (t.tm_year,
            t.tm_mon, t.tm_mday, t.tm_hour, t.tm_min, t.tm_sec)
        d["lmst"] = cur_sidereal(self.longitude).replace(",",":")
        d["sequence"] = self.sequence
        d["subseq"] = self.subseq

        #
        # Construct the list of profiles we're going to put in the .json dict
        #  along with a bit of housekeeping information per profile
        #
        profiles = []
        for x in range(self.nprofiles):
            pd = {}
            pd["profile"] = list(outputs[x])
            pd["p0"] = self.periods[x]
            pd["shift"] = self.shifts[x]
            profiles.append(pd)
        d["profiles"] = profiles

        #
        # We keep a running record, and dump the entire record
        #   every LOGTIME.
        #
        # This allows us to have a syntax-complete JSON file
        #  every time we write the file.  It means that the I/O
        #  load increases as time moves on, but since we're only
        #  doing this once per minute (by default), and really not
        #  creating THAT much data, this seems to work OK
        #
        #
        self.jsonlets.append(d)

        #
        # Handle "subint" sub-integrations
        #
        if (self.subint != None and self.subint &gt; 0):
            self.subtimer -= 1

            #
            # Time to start a new sub-integration
            #
            if (self.subtimer &lt;= 0):
                self.subtimer = self.subint

                #
                # We reduce the current profile almost to nothing,
                #  so that the "new" sub-int has something to chain
                #  from, but only a little bit of influence from what
                #  has gone before
                #
                for x in range(self.nprofiles):
                    #
                    # So compute the average reduction
                    #
                    t = np.divide(self.profiles[x],self.pcounts[x])

                    #
                    # Multiply by 0.1
                    #
                    t = np.multiply(t,0.1)

                    #
                    # Start building up (mostly) "fresh"
                    #  profile
                    #
                    self.profiles[x] = np.array(t)
                    self.pcounts[x] = np.array([1.0]*self.plen)

                self.subseq += 1

        #
        # Raise a simple semaphore
        #
        self.logready = True

    def work(self, input_items, output_items):
        """Do dedispersion/folding"""

        #
        # Call it 'q' just so we don't have to use
        #  'input_items[0]' everywhere.
        #
        q = input_items[0]
        l = len(q)

        #
        # Record the arrival of a bouncing baby first sample
        #
        # This is for the benefit of the header writer, to
        #  record a sub-1-second accurate MJD estimate for
        #  the dataset.
        #
        # We make a half-hearted attempt to adjust for the number of
        #  samples in the buffer and work backwards.
        #
        if (self.first_sample == None):
            self.first_sample = time.time()-(len(q)*self.sper)
            
        #
        # We deal with data in "chunks"
        #
        # That are self.flen--the filterbank size
        #
        for i in range(int(l/self.flen)):
            #
            # To make the index expression not quite so
            #  agonizing.
            #
            bndx = i*self.flen

            #
            # Do delay/dedispersion logic
            #
            #
            outval = 0.0
            delay = self.maxdelay
            #
            # For each filterbank position
            #
            # Use a ring-buffer based delay mechanism
            #
            for x in range(self.flen):
                #
                # Place input into ring buffer at current position
                #  (that will be the same for each channel in the FB)
                #
                self.delayrings[x][self.delayptr] = q[bndx+x]
                
                #
                # Determine delayed ring buffer position
                #  This will be *different* for each channel
                #
                dndx = self.delaymap[self.delayptr][delay]

                #
                # Add in delayed data
                #
                outval += self.delayrings[x][dndx]
                
                #
                # Move to next delay value
                #
                delay -= self.delayincr

            self.delayptr = (self.delayptr + 1) % self.delaylen
            
            #
            # Only one thing uses this at the moment, but future stuff
            #
            self.outer_cnt += 1


            #
            # Do gross impulse removal -- reduce to average
            #
            # We don't do the comparison until after our threshold
            #  estimator has settled after start-up, which will be
            #  in terms of "outer" (fast) samples--kept in self.thrcount
            #
            #
            # self.thresh contains a longer-term average of the signal
            #  coming in to the folder, and is updated at 1Hz through
            #  the set_thresh() function coming out of the flow-graph
            #
            # If our sample exceeds this value by a factor of 2.5 or
            #  more (~4dB in power), replace it with a randomly-dithered
            #  version of the average
            #
            # We don't expect this to happen very often, so the expense
            #  of calling random.uniform() shouldn't affect performance
            #  very much.  If this IS happening a lot, then the passband is
            #  probably not that useful for pulsars...
            #
            #
            if (self.outer_cnt &gt; self.thrcount and outval &gt; (self.thresh*2.5)):
                outval = self.thresh*random.uniform(0.98,1.02)

            #
            # Outval now contains a single de-dispersed
            #  impulse-removed sample
            #

            #
            # Increment Mission Elapsed Time
            #
            self.MET += 1

            #
            # Turn into floating-point sample-period representation
            #
            # Do this here rather than inside the loop, since it would
            #  (maybe?) get re-computed needlessly inside the loop.
            #
            flmet = float(self.MET)*self.sper

            #
            # Determine where the current sample is to be placed in the
            #  time/phase bin buffer.
            #
            # Update all the time/phase bins (we have a number of profiles, each with
            #   a slightly-different estimate for P0).
            #
            for x in range(self.nprofiles):
                #
                # This re-expresses self.MET in terms of number of
                #   time/phase bins for ths particular estimate of
                #   P0.
                #
                # From sigProcPy3
                # abs(((int)(nbins*tj*(1+accel*(tj-tobs)/(2*c))/period + 0.5)))%nbins;
                #
                # We eliminate the central correction for binary pulsars
                #
                # The +0.5 arranges to round-up prior to integer truncation
                #

                #z = (float(self.plen)*(flmet/self.periods[x])) + 0.5

                #
                # We eliminate a divide here, by noticing that self.plen and
                #  self.periods[x] are constant, so can be combined, using
                #  the pax[] array.
                #
                z = (flmet * self.pax[x]) + 0.5

                #
                # Convert that to an int, then reduce modulo number
                #  of time/phase bins in a single estimate
                #  normally there'll be P0/W50 bins, possibly
                #  expanded by some small-integer ratio.
                #
                # J0332+5434, for example, gives an optimal number
                #   of time/phase bins of 108 but you might want to
                #   extend that to 216 or 432 to get higher-resolution
                #   of the pulse profile.
                #
                where = int(z) % int(self.plen)

                #
                # Update appropriate time/phase bin
                #
                self.profiles[x][where] += outval
                self.pcounts[x][where] += 1.0

            if (self.housekeeping == True):
                #
                # Decrement the log counter
                #
                self.logcount -= 1

                #
                # If time to log
                #
                if (self.logcount &lt;= 0):
                    self.do_logging()
                    self.sequence += 1
                    self.logcount = self.INTERVAL


        return len(q)
</value>
    </param>
    <param>
      <key>comment</key>
      <value>*************************
EPOCH FOLDER
PRODUCE TRIAL FOLDINGS
APPLY DM CORRECTION
THIS SHOULD BE BROKEN
UP AT SOME POINT
*************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>fbrate</key>
      <value>real_fbrate</value>
    </param>
    <param>
      <key>fbsize</key>
      <value>fbsize</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1600, 424)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>Stupid_folder</value>
    </param>
    <param>
      <key>period</key>
      <value>period</value>
    </param>
    <param>
      <key>smear</key>
      <value>smear</value>
    </param>
    <param>
      <key>tbins</key>
      <value>tbins</value>
    </param>
    <param>
      <key>thresh</key>
      <value>numpy.sum(impulse_poller)</value>
    </param>
    <param>
      <key>tppms</key>
      <value>fine_ppms if fine &gt; 0 else coarse_ppms</value>
    </param>
  </block>
  <block>
    <key>blocks_probe_signal_vx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1288, 532)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>agc_probe</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(16, 888)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>antenna</value>
    </param>
    <param>
      <key>label</key>
      <value>Antenna selector</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"RX2"</value>
    </param>
  </block>
  <block>
    <key>blocks_complex_to_mag_squared</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(888, 252)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_complex_to_mag_squared_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_conjugate_cc</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>*****************************
EFFECT SPECTRAL INVERSION
******************************</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(504, 24)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_conjugate_cc_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>blocks_copy</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>enabled</key>
      <value>enable_writes</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1664, 844)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_copy_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>showports</key>
      <value>True</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_copy</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>enabled</key>
      <value>enable_writes</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1672, 340)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_copy_0_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>showports</key>
      <value>True</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_file_sink</key>
    <param>
      <key>append</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>.fil output for int8</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>file</key>
      <value>hfilename if flout == 0 else "/dev/null"</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1840, 328)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_file_sink_0</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>unbuffered</key>
      <value>True</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_file_sink</key>
    <param>
      <key>append</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>*************************
.FIL OUTPUT FOR F32 DATA
*************************</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>file</key>
      <value>"/dev/null" if flout == 0 else hfilename</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1816, 832)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_file_sink_1</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>unbuffered</key>
      <value>True</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_float_to_char</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1512, 340)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_float_to_char_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>scale</key>
      <value>60</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_integrate_xx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>**********************************
MAIN FILTER-BANK
INTEGRATOR/DECIMATOR

OUTPUT SAMPLE RATE DETERMINED
BY THIS BLOCK
**********************************</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>decim</key>
      <value>int(samp_rate/fbsize/real_fbrate)</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(328, 468)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_integrate_xx_0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_multiply_const_vxx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>*******************************
APPLY RFI AND SMOOTHING MASK
*******************************</value>
    </param>
    <param>
      <key>const</key>
      <value>bank_mask</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(640, 468)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_multiply_const_vxx_0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_multiply_const_vxx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>To avoid a lot of
negative values
We only apply 60% of
the DC estimate</value>
    </param>
    <param>
      <key>const</key>
      <value>[0.60]*fbsize</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(712, 684)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_multiply_const_vxx_1</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_multiply_const_vxx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>Apply AGC estimate</value>
    </param>
    <param>
      <key>const</key>
      <value>st_psr_helper.process_agc(agc_poller)</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1264, 340)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_multiply_const_vxx_2</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_stream_to_vector</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(376, 220)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_stream_to_vector_0</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>num_items</key>
      <value>fbsize</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_sub_xx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(864, 840)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_sub_xx_0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>num_inputs</key>
      <value>2</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>blocks_vector_to_stream</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>Convert to stream
Epoch folder will convert to vector
internally</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1376, 612)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_vector_to_stream_0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>num_items</key>
      <value>fbsize</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_head</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>**************
LIMIT RUNTIME
TO --obstime
**************</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(256, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>copyblock</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>num_items</key>
      <value>samp_rate*obstime</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(520, 1072)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>dec</value>
    </param>
    <param>
      <key>label</key>
      <value>Source DEC</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>54.5</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(24, 984)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>device</value>
    </param>
    <param>
      <key>label</key>
      <value>Device String</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"rtl=0"</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(32, 1272)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>dm</value>
    </param>
    <param>
      <key>label</key>
      <value>Dispersion Measure</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>26.76</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(504, 1272)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>drate</value>
    </param>
    <param>
      <key>label</key>
      <value>Filterbank output rate</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>2500</value>
    </param>
  </block>
  <block>
    <key>fft_vxx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>***************
FFT FILTERBANK
***************</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>fft_size</key>
      <value>fbsize</value>
    </param>
    <param>
      <key>forward</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(632, 192)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fft_vxx_0</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>nthreads</key>
      <value>1</value>
    </param>
    <param>
      <key>shift</key>
      <value>True</value>
    </param>
    <param>
      <key>window</key>
      <value>window.blackmanharris(fbsize)</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(424, 1184)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fine</value>
    </param>
    <param>
      <key>label</key>
      <value>Set fine-scale trial folding</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(128, 1368)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>flout</value>
    </param>
    <param>
      <key>label</key>
      <value>Enable floating-point FB output</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(584, 1184)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fmask</value>
    </param>
    <param>
      <key>label</key>
      <value>Frequency Mask</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>""</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(432, 976)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>freq</value>
    </param>
    <param>
      <key>label</key>
      <value>Frequency (in Hz)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>408.0e6</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(944, 1140)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>import_0</value>
    </param>
    <param>
      <key>import</key>
      <value>import time</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(944, 1084)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>import_0_0</value>
    </param>
    <param>
      <key>import</key>
      <value>import math</value>
    </param>
  </block>
  <block>
    <key>import</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(944, 1196)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>import_0_1_0</value>
    </param>
    <param>
      <key>import</key>
      <value>import numpy</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(576, 976)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>logtime</value>
    </param>
    <param>
      <key>label</key>
      <value>Logging interval (seconds)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>120</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(680, 1272)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>longitude</value>
    </param>
    <param>
      <key>label</key>
      <value>WGS84 Longitude</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>-75.984</value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>********************************
This cluster of variables computes
flowgraph parameters from input
pulsar parameters and parameters
like sample rate and sky frequency
********************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1552, 172)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_0</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>*********************************
COMMAND LINE PARAMETERS HERE
*********************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(24, 788)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_1</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>**************
IMPORTS HERE
**************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(936, 972)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_3</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>****************************
INT8 AGC/SCALING ESTIMATOR
****************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1320, 236)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_4</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>*************
RFI EXCISION
*************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(688, 356)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_6</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>note</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>********************
DC BLOCKER

SUBTRACT LOW-PASS
FROM RAW SIGNAL
********************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(920, 652)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>note_7</value>
    </param>
    <param>
      <key>note</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(16, 1080)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>obstime</value>
    </param>
    <param>
      <key>label</key>
      <value>Runtime in seconds</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>300</value>
    </param>
  </block>
  <block>
    <key>osmosdr_source</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>ant0</key>
      <value>antenna</value>
    </param>
    <param>
      <key>bb_gain0</key>
      <value>20</value>
    </param>
    <param>
      <key>bw0</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>dc_offset_mode0</key>
      <value>2</value>
    </param>
    <param>
      <key>corr0</key>
      <value>0</value>
    </param>
    <param>
      <key>freq0</key>
      <value>freq</value>
    </param>
    <param>
      <key>gain_mode0</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain0</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode0</key>
      <value>0</value>
    </param>
    <param>
      <key>gain0</key>
      <value>rfgain</value>
    </param>
    <param>
      <key>ant10</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain10</key>
      <value>20</value>
    </param>
    <param>
      <key>bw10</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode10</key>
      <value>0</value>
    </param>
    <param>
      <key>corr10</key>
      <value>0</value>
    </param>
    <param>
      <key>freq10</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode10</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain10</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode10</key>
      <value>0</value>
    </param>
    <param>
      <key>gain10</key>
      <value>10</value>
    </param>
    <param>
      <key>ant11</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain11</key>
      <value>20</value>
    </param>
    <param>
      <key>bw11</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode11</key>
      <value>0</value>
    </param>
    <param>
      <key>corr11</key>
      <value>0</value>
    </param>
    <param>
      <key>freq11</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode11</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain11</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode11</key>
      <value>0</value>
    </param>
    <param>
      <key>gain11</key>
      <value>10</value>
    </param>
    <param>
      <key>ant12</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain12</key>
      <value>20</value>
    </param>
    <param>
      <key>bw12</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode12</key>
      <value>0</value>
    </param>
    <param>
      <key>corr12</key>
      <value>0</value>
    </param>
    <param>
      <key>freq12</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode12</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain12</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode12</key>
      <value>0</value>
    </param>
    <param>
      <key>gain12</key>
      <value>10</value>
    </param>
    <param>
      <key>ant13</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain13</key>
      <value>20</value>
    </param>
    <param>
      <key>bw13</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode13</key>
      <value>0</value>
    </param>
    <param>
      <key>corr13</key>
      <value>0</value>
    </param>
    <param>
      <key>freq13</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode13</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain13</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode13</key>
      <value>0</value>
    </param>
    <param>
      <key>gain13</key>
      <value>10</value>
    </param>
    <param>
      <key>ant14</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain14</key>
      <value>20</value>
    </param>
    <param>
      <key>bw14</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode14</key>
      <value>0</value>
    </param>
    <param>
      <key>corr14</key>
      <value>0</value>
    </param>
    <param>
      <key>freq14</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode14</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain14</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode14</key>
      <value>0</value>
    </param>
    <param>
      <key>gain14</key>
      <value>10</value>
    </param>
    <param>
      <key>ant15</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain15</key>
      <value>20</value>
    </param>
    <param>
      <key>bw15</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode15</key>
      <value>0</value>
    </param>
    <param>
      <key>corr15</key>
      <value>0</value>
    </param>
    <param>
      <key>freq15</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode15</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain15</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode15</key>
      <value>0</value>
    </param>
    <param>
      <key>gain15</key>
      <value>10</value>
    </param>
    <param>
      <key>ant16</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain16</key>
      <value>20</value>
    </param>
    <param>
      <key>bw16</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode16</key>
      <value>0</value>
    </param>
    <param>
      <key>corr16</key>
      <value>0</value>
    </param>
    <param>
      <key>freq16</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode16</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain16</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode16</key>
      <value>0</value>
    </param>
    <param>
      <key>gain16</key>
      <value>10</value>
    </param>
    <param>
      <key>ant17</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain17</key>
      <value>20</value>
    </param>
    <param>
      <key>bw17</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode17</key>
      <value>0</value>
    </param>
    <param>
      <key>corr17</key>
      <value>0</value>
    </param>
    <param>
      <key>freq17</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode17</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain17</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode17</key>
      <value>0</value>
    </param>
    <param>
      <key>gain17</key>
      <value>10</value>
    </param>
    <param>
      <key>ant18</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain18</key>
      <value>20</value>
    </param>
    <param>
      <key>bw18</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode18</key>
      <value>0</value>
    </param>
    <param>
      <key>corr18</key>
      <value>0</value>
    </param>
    <param>
      <key>freq18</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode18</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain18</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode18</key>
      <value>0</value>
    </param>
    <param>
      <key>gain18</key>
      <value>10</value>
    </param>
    <param>
      <key>ant19</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain19</key>
      <value>20</value>
    </param>
    <param>
      <key>bw19</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode19</key>
      <value>0</value>
    </param>
    <param>
      <key>corr19</key>
      <value>0</value>
    </param>
    <param>
      <key>freq19</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode19</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain19</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode19</key>
      <value>0</value>
    </param>
    <param>
      <key>gain19</key>
      <value>10</value>
    </param>
    <param>
      <key>ant1</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain1</key>
      <value>20</value>
    </param>
    <param>
      <key>bw1</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode1</key>
      <value>0</value>
    </param>
    <param>
      <key>corr1</key>
      <value>0</value>
    </param>
    <param>
      <key>freq1</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode1</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain1</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode1</key>
      <value>0</value>
    </param>
    <param>
      <key>gain1</key>
      <value>10</value>
    </param>
    <param>
      <key>ant20</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain20</key>
      <value>20</value>
    </param>
    <param>
      <key>bw20</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode20</key>
      <value>0</value>
    </param>
    <param>
      <key>corr20</key>
      <value>0</value>
    </param>
    <param>
      <key>freq20</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode20</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain20</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode20</key>
      <value>0</value>
    </param>
    <param>
      <key>gain20</key>
      <value>10</value>
    </param>
    <param>
      <key>ant21</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain21</key>
      <value>20</value>
    </param>
    <param>
      <key>bw21</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode21</key>
      <value>0</value>
    </param>
    <param>
      <key>corr21</key>
      <value>0</value>
    </param>
    <param>
      <key>freq21</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode21</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain21</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode21</key>
      <value>0</value>
    </param>
    <param>
      <key>gain21</key>
      <value>10</value>
    </param>
    <param>
      <key>ant22</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain22</key>
      <value>20</value>
    </param>
    <param>
      <key>bw22</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode22</key>
      <value>0</value>
    </param>
    <param>
      <key>corr22</key>
      <value>0</value>
    </param>
    <param>
      <key>freq22</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode22</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain22</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode22</key>
      <value>0</value>
    </param>
    <param>
      <key>gain22</key>
      <value>10</value>
    </param>
    <param>
      <key>ant23</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain23</key>
      <value>20</value>
    </param>
    <param>
      <key>bw23</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode23</key>
      <value>0</value>
    </param>
    <param>
      <key>corr23</key>
      <value>0</value>
    </param>
    <param>
      <key>freq23</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode23</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain23</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode23</key>
      <value>0</value>
    </param>
    <param>
      <key>gain23</key>
      <value>10</value>
    </param>
    <param>
      <key>ant24</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain24</key>
      <value>20</value>
    </param>
    <param>
      <key>bw24</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode24</key>
      <value>0</value>
    </param>
    <param>
      <key>corr24</key>
      <value>0</value>
    </param>
    <param>
      <key>freq24</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode24</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain24</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode24</key>
      <value>0</value>
    </param>
    <param>
      <key>gain24</key>
      <value>10</value>
    </param>
    <param>
      <key>ant25</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain25</key>
      <value>20</value>
    </param>
    <param>
      <key>bw25</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode25</key>
      <value>0</value>
    </param>
    <param>
      <key>corr25</key>
      <value>0</value>
    </param>
    <param>
      <key>freq25</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode25</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain25</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode25</key>
      <value>0</value>
    </param>
    <param>
      <key>gain25</key>
      <value>10</value>
    </param>
    <param>
      <key>ant26</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain26</key>
      <value>20</value>
    </param>
    <param>
      <key>bw26</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode26</key>
      <value>0</value>
    </param>
    <param>
      <key>corr26</key>
      <value>0</value>
    </param>
    <param>
      <key>freq26</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode26</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain26</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode26</key>
      <value>0</value>
    </param>
    <param>
      <key>gain26</key>
      <value>10</value>
    </param>
    <param>
      <key>ant27</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain27</key>
      <value>20</value>
    </param>
    <param>
      <key>bw27</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode27</key>
      <value>0</value>
    </param>
    <param>
      <key>corr27</key>
      <value>0</value>
    </param>
    <param>
      <key>freq27</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode27</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain27</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode27</key>
      <value>0</value>
    </param>
    <param>
      <key>gain27</key>
      <value>10</value>
    </param>
    <param>
      <key>ant28</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain28</key>
      <value>20</value>
    </param>
    <param>
      <key>bw28</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode28</key>
      <value>0</value>
    </param>
    <param>
      <key>corr28</key>
      <value>0</value>
    </param>
    <param>
      <key>freq28</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode28</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain28</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode28</key>
      <value>0</value>
    </param>
    <param>
      <key>gain28</key>
      <value>10</value>
    </param>
    <param>
      <key>ant29</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain29</key>
      <value>20</value>
    </param>
    <param>
      <key>bw29</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode29</key>
      <value>0</value>
    </param>
    <param>
      <key>corr29</key>
      <value>0</value>
    </param>
    <param>
      <key>freq29</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode29</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain29</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode29</key>
      <value>0</value>
    </param>
    <param>
      <key>gain29</key>
      <value>10</value>
    </param>
    <param>
      <key>ant2</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain2</key>
      <value>20</value>
    </param>
    <param>
      <key>bw2</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode2</key>
      <value>0</value>
    </param>
    <param>
      <key>corr2</key>
      <value>0</value>
    </param>
    <param>
      <key>freq2</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode2</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain2</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode2</key>
      <value>0</value>
    </param>
    <param>
      <key>gain2</key>
      <value>10</value>
    </param>
    <param>
      <key>ant30</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain30</key>
      <value>20</value>
    </param>
    <param>
      <key>bw30</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode30</key>
      <value>0</value>
    </param>
    <param>
      <key>corr30</key>
      <value>0</value>
    </param>
    <param>
      <key>freq30</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode30</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain30</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode30</key>
      <value>0</value>
    </param>
    <param>
      <key>gain30</key>
      <value>10</value>
    </param>
    <param>
      <key>ant31</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain31</key>
      <value>20</value>
    </param>
    <param>
      <key>bw31</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode31</key>
      <value>0</value>
    </param>
    <param>
      <key>corr31</key>
      <value>0</value>
    </param>
    <param>
      <key>freq31</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode31</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain31</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode31</key>
      <value>0</value>
    </param>
    <param>
      <key>gain31</key>
      <value>10</value>
    </param>
    <param>
      <key>ant3</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain3</key>
      <value>20</value>
    </param>
    <param>
      <key>bw3</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode3</key>
      <value>0</value>
    </param>
    <param>
      <key>corr3</key>
      <value>0</value>
    </param>
    <param>
      <key>freq3</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode3</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain3</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode3</key>
      <value>0</value>
    </param>
    <param>
      <key>gain3</key>
      <value>10</value>
    </param>
    <param>
      <key>ant4</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain4</key>
      <value>20</value>
    </param>
    <param>
      <key>bw4</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode4</key>
      <value>0</value>
    </param>
    <param>
      <key>corr4</key>
      <value>0</value>
    </param>
    <param>
      <key>freq4</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode4</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain4</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode4</key>
      <value>0</value>
    </param>
    <param>
      <key>gain4</key>
      <value>10</value>
    </param>
    <param>
      <key>ant5</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain5</key>
      <value>20</value>
    </param>
    <param>
      <key>bw5</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode5</key>
      <value>0</value>
    </param>
    <param>
      <key>corr5</key>
      <value>0</value>
    </param>
    <param>
      <key>freq5</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode5</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain5</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode5</key>
      <value>0</value>
    </param>
    <param>
      <key>gain5</key>
      <value>10</value>
    </param>
    <param>
      <key>ant6</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain6</key>
      <value>20</value>
    </param>
    <param>
      <key>bw6</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode6</key>
      <value>0</value>
    </param>
    <param>
      <key>corr6</key>
      <value>0</value>
    </param>
    <param>
      <key>freq6</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode6</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain6</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode6</key>
      <value>0</value>
    </param>
    <param>
      <key>gain6</key>
      <value>10</value>
    </param>
    <param>
      <key>ant7</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain7</key>
      <value>20</value>
    </param>
    <param>
      <key>bw7</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode7</key>
      <value>0</value>
    </param>
    <param>
      <key>corr7</key>
      <value>0</value>
    </param>
    <param>
      <key>freq7</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode7</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain7</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode7</key>
      <value>0</value>
    </param>
    <param>
      <key>gain7</key>
      <value>10</value>
    </param>
    <param>
      <key>ant8</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain8</key>
      <value>20</value>
    </param>
    <param>
      <key>bw8</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode8</key>
      <value>0</value>
    </param>
    <param>
      <key>corr8</key>
      <value>0</value>
    </param>
    <param>
      <key>freq8</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode8</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain8</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode8</key>
      <value>0</value>
    </param>
    <param>
      <key>gain8</key>
      <value>10</value>
    </param>
    <param>
      <key>ant9</key>
      <value></value>
    </param>
    <param>
      <key>bb_gain9</key>
      <value>20</value>
    </param>
    <param>
      <key>bw9</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offset_mode9</key>
      <value>0</value>
    </param>
    <param>
      <key>corr9</key>
      <value>0</value>
    </param>
    <param>
      <key>freq9</key>
      <value>100e6</value>
    </param>
    <param>
      <key>gain_mode9</key>
      <value>False</value>
    </param>
    <param>
      <key>if_gain9</key>
      <value>20</value>
    </param>
    <param>
      <key>iq_balance_mode9</key>
      <value>0</value>
    </param>
    <param>
      <key>gain9</key>
      <value>10</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>args</key>
      <value>device</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(16, 96)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>osmo_radio</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>clock_source0</key>
      <value>refclock</value>
    </param>
    <param>
      <key>time_source0</key>
      <value>timesrc</value>
    </param>
    <param>
      <key>clock_source1</key>
      <value></value>
    </param>
    <param>
      <key>time_source1</key>
      <value></value>
    </param>
    <param>
      <key>clock_source2</key>
      <value></value>
    </param>
    <param>
      <key>time_source2</key>
      <value></value>
    </param>
    <param>
      <key>clock_source3</key>
      <value></value>
    </param>
    <param>
      <key>time_source3</key>
      <value></value>
    </param>
    <param>
      <key>clock_source4</key>
      <value></value>
    </param>
    <param>
      <key>time_source4</key>
      <value></value>
    </param>
    <param>
      <key>clock_source5</key>
      <value></value>
    </param>
    <param>
      <key>time_source5</key>
      <value></value>
    </param>
    <param>
      <key>clock_source6</key>
      <value></value>
    </param>
    <param>
      <key>time_source6</key>
      <value></value>
    </param>
    <param>
      <key>clock_source7</key>
      <value></value>
    </param>
    <param>
      <key>time_source7</key>
      <value></value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>nchan</key>
      <value>1</value>
    </param>
    <param>
      <key>num_mboards</key>
      <value>1</value>
    </param>
    <param>
      <key>type</key>
      <value>fc32</value>
    </param>
    <param>
      <key>sample_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>sync</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(16, 1184)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>period</value>
    </param>
    <param>
      <key>label</key>
      <value>Pulsar period (seconds)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>0.714520</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(304, 976)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pname</value>
    </param>
    <param>
      <key>label</key>
      <value>Pulsar Name</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"b0329+54"</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(760, 1072)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>port</value>
    </param>
    <param>
      <key>label</key>
      <value>XMLRPC Port</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>1420</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(216, 1272)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>prefix</value>
    </param>
    <param>
      <key>label</key>
      <value>filename prefix</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"."</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(640, 1072)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>ra</value>
    </param>
    <param>
      <key>label</key>
      <value>Source RA</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>3.5</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(160, 888)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>refclock</value>
    </param>
    <param>
      <key>label</key>
      <value>"Reference clock source"</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"internal"</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(288, 1368)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>res</value>
    </param>
    <param>
      <key>label</key>
      <value>Time bin resolution multiplier</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(24, 1368)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>rfgain</value>
    </param>
    <param>
      <key>label</key>
      <value>RF Gain</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>50</value>
    </param>
  </block>
  <block>
    <key>blocks_probe_signal_vx</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>*************************
THIS PROBE IS PROBED BY
THE 'rfi_poller' FUNCTION
PROBE BLOCK.

IT DRIVES THE RFI EXCISION
**************************</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(464, 324)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>rfi_probe</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>single_pole_iir_filter_xx</key>
    <param>
      <key>alpha</key>
      <value>1.0/(real_fbrate*2.0)</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>LOW-PASS BRANCH</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(480, 684)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>single_pole_iir_filter_xx_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>single_pole_iir_filter_xx</key>
    <param>
      <key>alpha</key>
      <value>1.0/(real_fbrate*3.0)</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1272, 436)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>single_pole_iir_filter_xx_1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>single_pole_iir_filter_xx</key>
    <param>
      <key>alpha</key>
      <value>0.03</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(232, 316)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>single_pole_iir_filter_xx_2</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>fbsize</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(184, 1184)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>sky</value>
    </param>
    <param>
      <key>label</key>
      <value>Sky Frequency (in Hz)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>0.0</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(360, 1072)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>srate</value>
    </param>
    <param>
      <key>label</key>
      <value>Sample Rate (in Hz)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>2.56e6</value>
    </param>
  </block>
  <block>
    <key>epy_module</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>source_code</key>
      <value># this module will be imported in the into your flowgraph
import numpy
import sys
import time
import struct
import json

smoothing_dict = {
    "smoother" : None,
    "estimate" : None
}

rfi_dict = {
    "mask_logs" : [],
    "recent_mask" : None,
    "recent_premask" : None,
    "persistence" : None
}

agc_dict = {
    "frozen_agc" : None,
    "counter" : 15
}

uber_dict = {
    "smoothing" : smoothing_dict,
    "rfi" : rfi_dict,
    "agc" : agc_dict,
}

#
# State transition handler for smoothing
#
def st_do_smoothing(state,args,d):

    spec = args["rfi_poller"]

    if (state == INIT):
        d["smoother"] = [1.0]*len(spec)
        d["estimate"] = numpy.array(spec)
        return ((1,d["smoother"]))
    elif (state == WAITING):
        d["estimate"] = numpy.add(d["estimate"],spec)
        d["estimate"] = numpy.divide(d["estimate"], 2.0)
        return ((1, d["smoother"]))
    elif (state == READY):
        #
        # Grab the average of the central bits of the spectrum
        #
        avg = sum(d["estimate"][2:-2])
        avg /= (len(d["estimate"])-4.0)
        idx = 0
        #
        # Create a smoothing vector
        #
        for v in spec:
            d["smoother"][idx] = avg/v
            idx += 1

        return ((1,d["smoother"]))
    else:
        return ((0,d["smoother"]))

#
# Handler for RFI logging
#
def st_do_rfilog(state,args,ud):

    smoother = ud["smoothing"]["smoother"]
    frozen_agc = ud["agc"]["frozen_agc"]
    recent_premask = ud["rfi"]["recent_premask"]

    prefix = args["prefix"]
    name = args["name"]
    mjd = args["mjd"]
    spec = args["rfi_poller"]


    d = {}
    ltp = time.gmtime()
    ltime = "%04d%02d%02d-%02d:%02d:%02d" % (ltp.tm_year,
        ltp.tm_mon, ltp.tm_mday, ltp.tm_hour,
        ltp.tm_min, ltp.tm_sec)
    d["rfimask"] = list(ud["rfi"]["recent_premask"])
    d["persistence"] = list(ud["rfi"]["persistence"])
    d["smoothing"] = list(ud["smoothing"]["smoother"])
    d["spectrum"] = list(numpy.multiply(numpy.log10(spec),10.0))
    d["time"] = ltime
    d["frozen_agc"] = list(ud["agc"]["frozen_agc"])
    d["composite_mask"] = list(numpy.multiply(ud["agc"]["frozen_agc"],
        ud["rfi"]["recent_premask"]) )
    ud["rfi"]["mask_logs"].append(d)
    fn = "%s/psr-%s-%8.2f-mask.json" % (prefix, name, mjd)
    fp = open(fn, "w")
    fp.write(json.dumps(ud["rfi"]["mask_logs"],indent=4)+"\n")

    return ((0,0))

#
# Handler for RFI evalution
#
def st_do_rfi(state,args,d):

    spec = args["rfi_poller"]


    #
    # Cant do any further calculations if we're gettings zeros
    #
    if (0.0 in spec):
        return ((0,[1.0]*len(spec)))

    if (state == INIT):
        d["persistence"] = [0]*len(spec)
        return ((1,[1.0]*len(spec)))

    #
    # Auto RFI detect
    #
    #
    # We hold off for a bit until we have a better "view" of
    #  the spectrum
    #
    avg = numpy.mean(spec)
    idx = 0
    retmask = [1.0]*len(spec)
    for v in spec:
        if (v &gt; avg*3.5):
            retmask[idx] = 0.0
        idx += 1

    return ((0,retmask))

#
# States
#
INIT = 0
READY = 1
COUNTING = 2
WAITING = 3
PROCESSING = 4
state_strings = ["INIT", "READY", "COUNTING", "WAITING", "PROCESSING"]

#
# Indexes into list for struct-like
#
# (Yes we could do this by creating a data-only "class", but
#   so much work, so few bullets)
#
ST_TINIT = 0  # Timer value
ST_STATE = 1  # Current state *index*
ST_STATES = 2 # List of states
ST_FUNC = 3   # function pointer
ST_DICT = 4   # State handler data


#
# Bit of a state machine table
#
rfi_stable = {
# name : timer-init current-state statelist function state-data
    "rfi": [10,  0, [INIT,PROCESSING], st_do_rfi, rfi_dict],
    "smoothing": [2,  0, [INIT,WAITING,WAITING,READY,PROCESSING], st_do_smoothing, smoothing_dict],
    "logging" : [60,  0, [COUNTING], st_do_rfilog, uber_dict]
}
st_counter = 0.0


def get_st_valid(d,key):
    return d[key][0]

def get_st_value(d,key):
    return d[key][1]

#
# Process static mask-list, as well as auto RFI masking, and
#  passband smoothing
#

last_time = time.time()
def frqlst_to_mask(flist, fc, bw, nfb,rfi_poller,mjd,prefix,name,eval_rate):
    #
    # State table
    #
    global rfi_stable

    #
    # State counter
    #
    global st_counter

    #
    # Last time were here
    #
    global last_time

    #
    # Dictionary of dictionaries for state variables
    #
    global uber_dict

    #
    # Neither *args nor **kwargs is quite right for what I want do do here...
    #
    args = {
        "flist" : flist,
        "fc" : fc,
        "bw" : bw,
        "nfb" : nfb,
        "rfi_poller" : rfi_poller,
        "mjd" : mjd,
        "prefix" : prefix,
        "name" : name,
        "eval_rate" : eval_rate
    }

    if rfi_poller == None or 0.0 in rfi_poller:
        return [1.0]*len(rfi_poller)

    #
    # Special structuring for "smoothing"
    #
    # Might generalize this at some point
    #
    bunchawaits = [WAITING]*int(5*eval_rate)
    rfi_stable["smoothing"][ST_STATES] = [INIT]+bunchawaits+[READY,PROCESSING]

    #
    # These states use the (seconds) timer
    #
    timed_states = [INIT,COUNTING]

    #
    # We get called at some arbitrary rate, usually greater than 1Hz
    #
    # But timed states are in 1Hz
    #
    do_timed_states = False
    now = time.time()
    if ((now - last_time) &gt;= 1.0):
        st_counter += 1
        st_intcnt = st_counter
        last_time = now
        do_timed_states = True

    #
    # Go down the state table
    #
    odict = {}
    for key in rfi_stable:

        #
        # Get our dictionary entry
        #
        st = rfi_stable[key]
        state = st[ST_STATES][st[ST_STATE]]

        #
        # Output dict, indexed by state-machine name
        # A list with a "Valid" indicator in position 0
        #
        odict[key] = [False, 0]
        rv = [0,0]
        #
        # Time to invoke this state transition
        #
        #
        # Call function if timer expired an a timed state
        #
        #
        if (do_timed_states == True and state in timed_states and st_intcnt != 0 and (st_intcnt % st[ST_TINIT]) == 0):
            rv = st[ST_FUNC](state,args,st[ST_DICT])
            odict[key] = [True, rv[1]]

        #
        # Not in timed_states?  Call it every damned time we get here
        #
        elif (state not in timed_states):
            rv = st[ST_FUNC](state,args,st[ST_DICT])
            odict[key] = [True, rv[1]]

        #
        # If the function says to advance to next state, do so
        #
        if (odict[key][0] == True and rv[0] != 0):
            st[ST_STATE] += 1
            st[ST_STATE] = st[ST_STATE] % len(st[ST_STATES])

    #
    # Compute static mask first
    #
    retmask = [1.0]*nfb

    #
    # If there is a static list
    #
    if len(flist) &gt; 0:

        #
        # Compute frequency end points
        #
        flow = fc - bw/2.0
        fhigh = fc + bw/2.0
        freqs = flist.split(",")
        fper = bw/float(nfb)
        for f in freqs:
            ff = float(f)
            #
            # Is within our frequency window?
            #
            if (ff &gt;= flow and ff &lt;= fhigh):
                diff = ff - flow
                indx = int(diff/fper)
                retmask[indx] = 0.0
        retmask.reverse()

    #
    # Convolve with the dynamic mask computed by the state-machine call
    #  (if valid)
    #
    if (get_st_valid(odict,"rfi") == True):
        retmask = numpy.multiply(retmask,get_st_value(odict,"rfi"))
        uber_dict["rfi"]["recent_premask"] = retmask
        for i in range(len(retmask)):
            if (retmask[i] == 0.0):
                uber_dict["rfi"]["persistence"][i] = 5
    else:
        uber_dict["rfi"]["recent_premask"] = retmask
        uber_dict["rfi"]["persistence"] = [0]*len(retmask)

    #
    # Make an RFI detection "sticky" for a bit
    #
    for i in range(len(retmask)):
        if (uber_dict["rfi"]["persistence"][i] &gt; 0):
            retmask[i] = 0.0
            uber_dict["rfi"]["persistence"][i] -= 1

    if (get_st_valid(odict,"smoothing") == True):
        smoother = get_st_value(odict, "smoothing")
    else:
        smoother = [1.0]*len(rfi_poller)

    #
    # Our output aggregate mask is the
    #  composition of the smoother and the
    #  RFI mask
    #
    rv = numpy.multiply(smoother,retmask)
    uber_dict["rfi"]["recent_mask"] = retmask

    return rv

#
# After a little while, we freeze the AGC value, to prevent
#  any kind of pulsing
#
def process_agc(av):
    global uber_dict

    mask = uber_dict["rfi"]["recent_mask"]

    #
    # Check for zeros
    #
    if (0.0 in av):
        return [1.0]*len(av)

    ret = numpy.array(av)
    ret = numpy.add(av,1.0e-8)
    ret = numpy.divide([0.90]*len(av), av)

    for i in range(len(mask)):
        if mask[i] != 1.0:
            ret[i] = 0.0

    if (uber_dict["agc"]["counter"] &gt; 0):
        uber_dict["agc"]["counter"] -=1
        uber_dict["agc"]["frozen_agc"] = ret
        return ret
    else:
        return numpy.multiply(uber_dict["agc"]["frozen_agc"],mask)

#
# Find a filter-bank output rate this produces strictly-integer
#  decimation.
#
def find_rate(srate,fbsize,target):

    brate = float(srate)/float(fbsize)
    decim = float(brate)/float(target)

    #
    # If target FBRATE is already integral
    #
    if (decim == float(int(decim))):
        return target

    #
    # Try to find some other rate
    #
    for trial in numpy.arange(1250.0,4000.0,1.0):
        decim = float(brate)/float(trial)
        if (decim == float(int(decim))):
            return trial
    

    rate = float(target)
    decim = int(srate/fbsize/rate)
    rate = float(srate)/float(fbsize)/float(decim)
    return rate


#
# Convert to the weirdness that is the hybrid floating-point
#  time format used by SIGPROC
#
def convert_sigproct(v):
    itime = int(float(v)*3600.0)
    hours = int(itime/3600)
    minutes = int((itime-(hours*3600))/60)
    seconds = itime - (hours*3600) - (minutes*60)
    timestr="%02d%02d%02d.0" % (hours, minutes, seconds)
    return(float(timestr))
#
# This will cause a header block to be prepended to the output file
#
# Thanks to Guillermo Gancio (ganciogm@gmail.com) for the inspiration
#   and much of the original code
#
# This seems to be broken for Python3
#
#
# This will cause a header block to be prepended to the output file
#
# Thanks to Guillermo Gancio (ganciogm@gmail.com) for the inspiration
#   and much of the code
#
#
import time
import struct
import sys

def write_element_name(fp,elem):
    fp.write(struct.pack('i',len(elem)))
    if (sys.version_info[0] &gt;= 3):
        fp.write(bytes(elem, encoding='utf8'))
    else:
        fp.write(elem)

def write_element_data(fp,elem,t):
    if (t != None and t != "str"):
        fp.write(struct.pack(t, elem))
    else:
        fp.write(struct.pack('i', len(elem)))
        if (sys.version_info[0] &gt;= 3):
            fp.write(bytes(elem, encoding='utf8'))
        else:
            fp.write(elem)

#
# Build the header for the output .FIL
#
# We get called via a poller in the flow-graph at a fairly-brisk pace
#  so that we can enable writing of the actual data as soon as possible.
#
hdr_done = False
def build_header_info(outfile,source_name,source_ra,source_dec,freq,bw,fbrate,fbsize,flout,first):
    global hdr_done

    #
    # We don't know when the first sample arrived yet
    #
    if (first == None or first &lt; 86400.0):
        return None


    #
    # Haven't done the header yet
    #
    if (hdr_done == False):

        fp = open(outfile, "wb")
        #
        # Time for one sample, in sec
        #
        tsamp=1.0/float(fbrate)

        #
        # Frequency offset between channels, in MHz
        # Negative to indicate channels are ordered highest-to-lowest
        #  some older tooling *REQUIRES* this ordering, so might
        #  as well follow the tradition, and that's the way the
        #  flow-graph and de-dispersion is also organized.
        #
        f_off=bw/fbsize
        f_off /= 1.0e6
        f_off *= -1

        #
        # Highest frequency represented in FB, in MHz
        #
        high_freq = freq+(bw/2.0)
        high_freq  /= 1.0e6
        high_freq -= (f_off/2.0)

        #
        # Lowest
        #
        low_freq = freq-(bw/2.0)
        low_freq /= 1.0e6
        low_freq += (f_off/2.0)

        #
        # Number of subbands
        #
        sub_bands=fbsize


        #
        # MJD
        # Good to within probably 50ms of system time
        #
        t_start = (first/86400.0)+40587.0;

        #
        # The rest here is mostly due to Guillermo Gancio ganciogm@gmail.com
        #
        # With considerable updates done here to support Python3
        #
        stx="HEADER_START"
        write_element_name(fp,stx)

        #-- Establish file type and name
        #
        write_element_name(fp,"rawdatafile")
        write_element_data(fp, outfile, "str")

        #-- Source RA (J2000)
        #
        write_element_name(fp, "src_raj")
        source_ra = convert_sigproct(source_ra)
        write_element_data (fp, source_ra, 'd')

        #-- Source DEC (J2000)
        #
        write_element_name(fp, "src_dej")
        source_dec= convert_sigproct(source_dec)
        write_element_data(fp, source_dec, 'd')
        
        #--
        #
        write_element_name(fp, "az_start")
        write_element_data(fp, 0.0, 'd')

        #--
        #
        write_element_name(fp, "za_start")
        write_element_data(fp, 0.0, 'd')

        #-- MJD of first sample -- approximately
        #
        write_element_name(fp, "tstart")
        write_element_data(fp, float(t_start), 'd')

        #-- Frequency spacing between channels
        #
        write_element_name(fp, "foff")
        write_element_data(fp, f_off, 'd')

        #-- Frequency of 1st (lowest) channel in the FB
        #
        write_element_name(fp, "fch1")
        write_element_data(fp, high_freq, 'd')

        #-- Number of channels in the FB
        #
        write_element_name(fp, "nchans")
        write_element_data(fp, sub_bands, 'i')

        #-- Data type--raw data
        #
        write_element_name(fp, "data_type")
        write_element_data(fp, 1, 'i')

        #-- ???
        #
        write_element_name(fp, "ibeam")
        write_element_data(fp, 1, 'i')

        #-- Data bits: either 8 bit int or 32-bit float
        #
        write_element_name(fp, "nbits")
        nb = 8 if flout &lt;= 0 else 32
        write_element_data(fp, nb, 'i')

        #-- Sample period
        #
        write_element_name(fp, "tsamp")
        write_element_data(fp, tsamp, 'd')

        #-- Single beam
        #
        write_element_name(fp, "nbeams")
        write_element_data(fp, 1, 'i')

        #-- Single IF (fom one polarization)
        #
        write_element_name(fp, "nifs")
        write_element_data(fp, 1, 'i')

        #-- The catalog name of the source
        #
        write_element_name(fp, "source_name")
        write_element_data(fp, source_name, "str")

        #-- Machine id.  Arbitrary
        #
        write_element_name(fp, "machine_id")
        write_element_data(fp, 20, 'i')

        #-- Telescope id.  Arbitrary
        #
        write_element_name(fp, "telescope_id")
        write_element_data(fp, 20, 'i')

        #-- End of header
        etx="HEADER_END"
        write_element_name(fp, etx)

        fp.close()
        hdr_done = True
        return True
    else:
        return False


#
# We get polled, and when hdr_done is set to True,
#  The flow-graph can proceed with writing sample data
#  to the .FIL file.
#
def get_wrenabled(pacer):
    global hdr_done

    return hdr_done
</value>
    </param>
    <param>
      <key>comment</key>
      <value>*************************
PYTHON HELPER CODE
*************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1824, 20)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>st_psr_helper</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(152, 976)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>subdev</value>
    </param>
    <param>
      <key>label</key>
      <value>Subdev (UHD only)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"A:0"</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(728, 1184)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>subint</value>
    </param>
    <param>
      <key>label</key>
      <value>Sub integration interval</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(352, 880)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>timesrc</value>
    </param>
    <param>
      <key>label</key>
      <value>"Reference time (1PPS) source"</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>"internal"</value>
    </param>
  </block>
  <block>
    <key>uhd_usrp_source</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>ant0</key>
      <value>antenna</value>
    </param>
    <param>
      <key>bw0</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>center_freq0</key>
      <value>freq</value>
    </param>
    <param>
      <key>dc_offs_enb0</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb0</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain0</key>
      <value>False</value>
    </param>
    <param>
      <key>gain0</key>
      <value>rfgain</value>
    </param>
    <param>
      <key>lo_export0</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source0</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant10</key>
      <value></value>
    </param>
    <param>
      <key>bw10</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq10</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb10</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb10</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain10</key>
      <value>False</value>
    </param>
    <param>
      <key>gain10</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export10</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source10</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant11</key>
      <value></value>
    </param>
    <param>
      <key>bw11</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq11</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb11</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb11</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain11</key>
      <value>False</value>
    </param>
    <param>
      <key>gain11</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export11</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source11</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant12</key>
      <value></value>
    </param>
    <param>
      <key>bw12</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq12</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb12</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb12</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain12</key>
      <value>False</value>
    </param>
    <param>
      <key>gain12</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export12</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source12</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant13</key>
      <value></value>
    </param>
    <param>
      <key>bw13</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq13</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb13</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb13</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain13</key>
      <value>False</value>
    </param>
    <param>
      <key>gain13</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export13</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source13</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant14</key>
      <value></value>
    </param>
    <param>
      <key>bw14</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq14</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb14</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb14</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain14</key>
      <value>False</value>
    </param>
    <param>
      <key>gain14</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export14</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source14</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant15</key>
      <value></value>
    </param>
    <param>
      <key>bw15</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq15</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb15</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb15</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain15</key>
      <value>False</value>
    </param>
    <param>
      <key>gain15</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export15</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source15</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant16</key>
      <value></value>
    </param>
    <param>
      <key>bw16</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq16</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb16</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb16</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain16</key>
      <value>False</value>
    </param>
    <param>
      <key>gain16</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export16</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source16</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant17</key>
      <value></value>
    </param>
    <param>
      <key>bw17</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq17</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb17</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb17</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain17</key>
      <value>False</value>
    </param>
    <param>
      <key>gain17</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export17</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source17</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant18</key>
      <value></value>
    </param>
    <param>
      <key>bw18</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq18</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb18</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb18</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain18</key>
      <value>False</value>
    </param>
    <param>
      <key>gain18</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export18</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source18</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant19</key>
      <value></value>
    </param>
    <param>
      <key>bw19</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq19</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb19</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb19</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain19</key>
      <value>False</value>
    </param>
    <param>
      <key>gain19</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export19</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source19</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant1</key>
      <value></value>
    </param>
    <param>
      <key>bw1</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq1</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb1</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb1</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain1</key>
      <value>False</value>
    </param>
    <param>
      <key>gain1</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export1</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source1</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant20</key>
      <value></value>
    </param>
    <param>
      <key>bw20</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq20</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb20</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb20</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain20</key>
      <value>False</value>
    </param>
    <param>
      <key>gain20</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export20</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source20</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant21</key>
      <value></value>
    </param>
    <param>
      <key>bw21</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq21</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb21</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb21</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain21</key>
      <value>False</value>
    </param>
    <param>
      <key>gain21</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export21</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source21</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant22</key>
      <value></value>
    </param>
    <param>
      <key>bw22</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq22</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb22</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb22</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain22</key>
      <value>False</value>
    </param>
    <param>
      <key>gain22</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export22</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source22</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant23</key>
      <value></value>
    </param>
    <param>
      <key>bw23</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq23</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb23</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb23</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain23</key>
      <value>False</value>
    </param>
    <param>
      <key>gain23</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export23</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source23</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant24</key>
      <value></value>
    </param>
    <param>
      <key>bw24</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq24</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb24</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb24</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain24</key>
      <value>False</value>
    </param>
    <param>
      <key>gain24</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export24</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source24</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant25</key>
      <value></value>
    </param>
    <param>
      <key>bw25</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq25</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb25</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb25</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain25</key>
      <value>False</value>
    </param>
    <param>
      <key>gain25</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export25</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source25</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant26</key>
      <value></value>
    </param>
    <param>
      <key>bw26</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq26</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb26</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb26</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain26</key>
      <value>False</value>
    </param>
    <param>
      <key>gain26</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export26</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source26</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant27</key>
      <value></value>
    </param>
    <param>
      <key>bw27</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq27</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb27</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb27</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain27</key>
      <value>False</value>
    </param>
    <param>
      <key>gain27</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export27</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source27</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant28</key>
      <value></value>
    </param>
    <param>
      <key>bw28</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq28</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb28</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb28</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain28</key>
      <value>False</value>
    </param>
    <param>
      <key>gain28</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export28</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source28</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant29</key>
      <value></value>
    </param>
    <param>
      <key>bw29</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq29</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb29</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb29</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain29</key>
      <value>False</value>
    </param>
    <param>
      <key>gain29</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export29</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source29</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant2</key>
      <value></value>
    </param>
    <param>
      <key>bw2</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq2</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb2</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb2</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain2</key>
      <value>False</value>
    </param>
    <param>
      <key>gain2</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export2</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source2</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant30</key>
      <value></value>
    </param>
    <param>
      <key>bw30</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq30</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb30</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb30</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain30</key>
      <value>False</value>
    </param>
    <param>
      <key>gain30</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export30</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source30</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant31</key>
      <value></value>
    </param>
    <param>
      <key>bw31</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq31</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb31</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb31</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain31</key>
      <value>False</value>
    </param>
    <param>
      <key>gain31</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export31</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source31</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant3</key>
      <value></value>
    </param>
    <param>
      <key>bw3</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq3</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb3</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb3</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain3</key>
      <value>False</value>
    </param>
    <param>
      <key>gain3</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export3</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source3</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant4</key>
      <value></value>
    </param>
    <param>
      <key>bw4</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq4</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb4</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb4</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain4</key>
      <value>False</value>
    </param>
    <param>
      <key>gain4</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export4</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source4</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant5</key>
      <value></value>
    </param>
    <param>
      <key>bw5</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq5</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb5</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb5</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain5</key>
      <value>False</value>
    </param>
    <param>
      <key>gain5</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export5</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source5</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant6</key>
      <value></value>
    </param>
    <param>
      <key>bw6</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq6</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb6</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb6</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain6</key>
      <value>False</value>
    </param>
    <param>
      <key>gain6</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export6</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source6</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant7</key>
      <value></value>
    </param>
    <param>
      <key>bw7</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq7</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb7</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb7</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain7</key>
      <value>False</value>
    </param>
    <param>
      <key>gain7</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export7</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source7</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant8</key>
      <value></value>
    </param>
    <param>
      <key>bw8</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq8</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb8</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb8</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain8</key>
      <value>False</value>
    </param>
    <param>
      <key>gain8</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export8</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source8</key>
      <value>internal</value>
    </param>
    <param>
      <key>ant9</key>
      <value></value>
    </param>
    <param>
      <key>bw9</key>
      <value>0</value>
    </param>
    <param>
      <key>center_freq9</key>
      <value>0</value>
    </param>
    <param>
      <key>dc_offs_enb9</key>
      <value>True</value>
    </param>
    <param>
      <key>iq_imbal_enb9</key>
      <value>True</value>
    </param>
    <param>
      <key>norm_gain9</key>
      <value>False</value>
    </param>
    <param>
      <key>gain9</key>
      <value>0</value>
    </param>
    <param>
      <key>lo_export9</key>
      <value>False</value>
    </param>
    <param>
      <key>lo_source9</key>
      <value>internal</value>
    </param>
    <param>
      <key>clock_rate</key>
      <value>0.0</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>dev_addr</key>
      <value>device</value>
    </param>
    <param>
      <key>dev_args</key>
      <value>""</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(16, 124)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>uhd_radio</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>clock_source0</key>
      <value>refclock</value>
    </param>
    <param>
      <key>sd_spec0</key>
      <value>subdev</value>
    </param>
    <param>
      <key>time_source0</key>
      <value>timesrc</value>
    </param>
    <param>
      <key>clock_source1</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec1</key>
      <value></value>
    </param>
    <param>
      <key>time_source1</key>
      <value></value>
    </param>
    <param>
      <key>clock_source2</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec2</key>
      <value></value>
    </param>
    <param>
      <key>time_source2</key>
      <value></value>
    </param>
    <param>
      <key>clock_source3</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec3</key>
      <value></value>
    </param>
    <param>
      <key>time_source3</key>
      <value></value>
    </param>
    <param>
      <key>clock_source4</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec4</key>
      <value></value>
    </param>
    <param>
      <key>time_source4</key>
      <value></value>
    </param>
    <param>
      <key>clock_source5</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec5</key>
      <value></value>
    </param>
    <param>
      <key>time_source5</key>
      <value></value>
    </param>
    <param>
      <key>clock_source6</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec6</key>
      <value></value>
    </param>
    <param>
      <key>time_source6</key>
      <value></value>
    </param>
    <param>
      <key>clock_source7</key>
      <value></value>
    </param>
    <param>
      <key>sd_spec7</key>
      <value></value>
    </param>
    <param>
      <key>time_source7</key>
      <value></value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>nchan</key>
      <value>1</value>
    </param>
    <param>
      <key>num_mboards</key>
      <value>1</value>
    </param>
    <param>
      <key>type</key>
      <value>fc32</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>hide_cmd_port</key>
      <value>False</value>
    </param>
    <param>
      <key>hide_lo_controls</key>
      <value>True</value>
    </param>
    <param>
      <key>stream_args</key>
      <value></value>
    </param>
    <param>
      <key>stream_chans</key>
      <value>[]</value>
    </param>
    <param>
      <key>sync</key>
      <value>sync</value>
    </param>
    <param>
      <key>otw</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(896, 124)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>raw_fb</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(848, 476)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_1</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>excised_fb</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value>********************************
This operates at median_len X
the rate we'll ultimately log to
.FIL files.
But the folder applies a median
filter to the de-dispersed stream
prior to folding, so we need enough
rate to accound for that.
*********************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1032, 820)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_2</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>dc_removed</value>
    </param>
  </block>
  <block>
    <key>virtual_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(800, 20)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_sink_3</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>hw_stream</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(120, 476)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>raw_fb</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(248, 692)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_1</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>excised_fb</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(656, 836)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_1_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>excised_fb</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1064, 348)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_2</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>dc_removed</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1176, 612)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_2_0</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>dc_removed</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1056, 444)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_2_1</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>dc_removed</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1392, 852)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_3</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>dc_removed</value>
    </param>
  </block>
  <block>
    <key>virtual_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(368, 268)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>180</value>
    </param>
    <param>
      <key>id</key>
      <value>virtual_source_4</value>
    </param>
    <param>
      <key>stream_id</key>
      <value>hw_stream</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(184, 1080)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>width</value>
    </param>
    <param>
      <key>label</key>
      <value>Pulsar W50 width (seconds)</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>eng_float</value>
    </param>
    <param>
      <key>value</key>
      <value>0.0066</value>
    </param>
  </block>
  <block>
    <key>xmlrpc_server</key>
    <param>
      <key>addr</key>
      <value>localhost</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value>****************************
XMLRPC SERVER
PRIMARILY USED TO SUPPORT
THE 'profile_display' APP.
***************************</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1432, 1284)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>xmlrpc_server_0</value>
    </param>
    <param>
      <key>logging</key>
      <value>False</value>
    </param>
    <param>
      <key>port</key>
      <value>port</value>
    </param>
  </block>
  <connection>
    <source_block_id>blocks_complex_to_mag_squared_0</source_block_id>
    <sink_block_id>virtual_sink_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_conjugate_cc_0</source_block_id>
    <sink_block_id>virtual_sink_3</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_copy_0</source_block_id>
    <sink_block_id>blocks_file_sink_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_copy_0_0</source_block_id>
    <sink_block_id>blocks_file_sink_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_float_to_char_0</source_block_id>
    <sink_block_id>blocks_copy_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_integrate_xx_0</source_block_id>
    <sink_block_id>blocks_multiply_const_vxx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_integrate_xx_0</source_block_id>
    <sink_block_id>single_pole_iir_filter_xx_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_multiply_const_vxx_0</source_block_id>
    <sink_block_id>virtual_sink_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_multiply_const_vxx_1</source_block_id>
    <sink_block_id>blocks_sub_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>1</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_multiply_const_vxx_2</source_block_id>
    <sink_block_id>blocks_float_to_char_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_stream_to_vector_0</source_block_id>
    <sink_block_id>fft_vxx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_sub_xx_0</source_block_id>
    <sink_block_id>virtual_sink_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_vector_to_stream_0</source_block_id>
    <sink_block_id>Stupid_folder</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>copyblock</source_block_id>
    <sink_block_id>blocks_conjugate_cc_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>fft_vxx_0</source_block_id>
    <sink_block_id>blocks_complex_to_mag_squared_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>single_pole_iir_filter_xx_0</source_block_id>
    <sink_block_id>blocks_multiply_const_vxx_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>single_pole_iir_filter_xx_1</source_block_id>
    <sink_block_id>agc_probe</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>single_pole_iir_filter_xx_2</source_block_id>
    <sink_block_id>rfi_probe</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>uhd_radio</source_block_id>
    <sink_block_id>copyblock</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_0</source_block_id>
    <sink_block_id>blocks_integrate_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_1</source_block_id>
    <sink_block_id>single_pole_iir_filter_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_1_0</source_block_id>
    <sink_block_id>blocks_sub_xx_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_2</source_block_id>
    <sink_block_id>blocks_multiply_const_vxx_2</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_2_0</source_block_id>
    <sink_block_id>blocks_vector_to_stream_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_2_1</source_block_id>
    <sink_block_id>single_pole_iir_filter_xx_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_3</source_block_id>
    <sink_block_id>blocks_copy_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>virtual_source_4</source_block_id>
    <sink_block_id>blocks_stream_to_vector_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
</flow_graph>
